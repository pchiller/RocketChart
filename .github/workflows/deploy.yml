name: Continuous Deployment to DigitalOcean

# 1. Define when this workflow runs
on:
  push:
    branches:
      - main  # Change 'main' to your primary branch name

# 2. Define the jobs (tasks) to be executed
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      # (Optional) Add steps here for building your application, 
      # running tests, compiling assets, etc.

      - name: Deploy via SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          # Use the secrets we defined in GitHub Settings
          host: ${{ secrets.DROPLET_IP }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          
          # 3. The Deployment Commands (Customize these!)
script: |
            # --- Configuration Variables (Edit These!) ---
            DEPLOY_DIR="/var/www/your-project-folder"
            APP_SCRIPT="telegram_bot.py" 
            
            # --- 1. Pull Latest Code ---
            echo "Navigating to $DEPLOY_DIR and pulling latest changes..."
            cd $DEPLOY_DIR
            git pull origin main
            
            # --- 2. Safely STOP the old process ---
            # Search for the PID using the full command line
            PID=$(pgrep -f "python.*$APP_SCRIPT")
            
            if [ -n "$PID" ]; then
              echo "Stopping existing process with PID: $PID"
              
              # Attempt graceful shutdown (SIGTERM)
              kill "$PID" 
              sleep 5 
              
              # Check if process is still running; if so, force kill (SIGKILL)
              if kill -0 "$PID" 2>/dev/null; then
                  echo "Process did not stop gracefully. Forcing termination (kill -9)."
                  kill -9 "$PID"
              fi
            else
              echo "No existing process found to stop."
            fi

            # --- 3. Start the new process ---
            echo "Starting new instance of $APP_SCRIPT..."
            # Note: nohup and '&' are required to keep the process running after SSH disconnects
            nohup /usr/bin/python3 "$APP_SCRIPT" > app.log 2>&1 & 

            echo "Deployment and restart complete! Process running in background."